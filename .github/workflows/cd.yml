name: CD

on:
  push:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --dearmor > ~/.gnupg/secring.gpg
          gpg --import ~/.gnupg/secring.gpg

      - name: Configure Maven settings
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "central",
              "username": "${{ secrets.MAVEN_CENTRAL_USERNAME }}",
              "password": "${{ secrets.MAVEN_CENTRAL_PASSWORD }}"
            }]

      - name: Get version from pom
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=revision -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Update version for release
        if: github.event_name == 'release'
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          RELEASE_VERSION=${RELEASE_VERSION#v}  # Remove 'v' prefix if present
          mvn versions:set -DnewVersion=$RELEASE_VERSION -B
          echo "Updated version to: $RELEASE_VERSION"

      - name: Run tests
        run: mvn clean test -B

      - name: Build and deploy to Maven Central
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn clean deploy -B \
            -Dgpg.passphrase=$GPG_PASSPHRASE \
            -DskipTests=true \
            -Prelease

      - name: Create deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed to**: Maven Central" >> $GITHUB_STEP_SUMMARY

  create-tag:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Get version
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=revision -q -DforceStdout)
          # Remove -SNAPSHOT suffix for tagging
          TAG_VERSION=${VERSION%-SNAPSHOT}
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.get_version.outputs.tag_version }}" -m "Release version ${{ steps.get_version.outputs.tag_version }}"
          git push origin "v${{ steps.get_version.outputs.tag_version }}"
