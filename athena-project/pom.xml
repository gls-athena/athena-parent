<?xml version="1.0" encoding="UTF-8"?>
<!--
    Maven 项目对象模型 (POM) 文件，定义了 Athena 项目的结构、依赖和构建配置。
    此文件作为父级 POM 被子模块继承，统一管理版本号、依赖项和插件配置。
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 指定当前 POM 使用的模型版本 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 父项目引用，用于继承通用配置 -->
    <parent>
        <groupId>io.github.gls-athena</groupId>
        <artifactId>athena-parent</artifactId>
        <version>${revision}</version>
    </parent>

    <!-- 当前项目的唯一标识符 -->
    <artifactId>athena-project</artifactId>
    <!-- 打包方式为 pom，表示这是一个聚合项目 -->
    <packaging>pom</packaging>
    <!-- 项目名称 -->
    <name>Athena Project</name>
    <!-- 项目描述信息 -->
    <description>Athena 核心项目模块</description>

    <!-- 子模块列表，定义该项目包含的所有子模块 -->
    <modules>
        <module>athena-cloud</module>
        <module>athena-common</module>
        <module>athena-sdk</module>
        <module>athena-starter</module>
    </modules>

    <!-- 定义项目中使用的属性变量，便于统一管理和版本控制 -->
    <properties>
        <java.version>21</java.version>
        <grpc.version>1.72.0</grpc.version>
        <netflix-dgs.version>10.2.1</netflix-dgs.version>
        <protobuf-java.version>4.30.2</protobuf-java.version>
        <sentry.version>8.16.0</sentry.version>
        <spring-ai.version>1.0.1</spring-ai.version>
        <spring-boot-admin.version>3.5.0</spring-boot-admin.version>
        <spring-cloud-azure.version>5.23.0</spring-cloud-azure.version>
        <spring-cloud-gcp.version>7.1.0</spring-cloud-gcp.version>
        <spring-cloud-services.version>4.3.0</spring-cloud-services.version>
        <spring-cloud.version>2025.0.0</spring-cloud.version>
        <spring-grpc.version>0.10.0</spring-grpc.version>
        <spring-shell.version>3.4.1</spring-shell.version>
        <timefold-solver.version>1.25.0</timefold-solver.version>
        <vaadin.version>24.8.6</vaadin.version>

        <mapstruct.version>1.6.3</mapstruct.version>
        <hutool.version>5.8.38</hutool.version>
        <swagger.version>2.2.30</swagger.version>
        <fastexcel.version>1.2.0</fastexcel.version>
        <openpdf.version>2.2.4</openpdf.version>
        <docx4j.version>11.5.4</docx4j.version>
        <aliyun-java-sdk-core.version>4.7.3</aliyun-java-sdk-core.version>
        <aliyun-java-sdk-dysmsapi.version>2.2.1</aliyun-java-sdk-dysmsapi.version>
        <aliyun-sdk-oss.version>3.18.1</aliyun-sdk-oss.version>
        <redisson.version>3.48.0</redisson.version>
        <dynamic-datasource.version>4.3.1</dynamic-datasource.version>
        <mybatis-plus.version>3.5.12</mybatis-plus.version>
        <springdoc-openapi.version>2.8.8</springdoc-openapi.version>
        <xxl-job.version>3.1.0</xxl-job.version>
        <spring-cloud-alibaba.version>2023.0.3.3</spring-cloud-alibaba.version>
        <spring-ai-alibaba.version>1.0.0.2</spring-ai-alibaba.version>
        <commons-io.version>2.19.0</commons-io.version>
    </properties>

    <!-- 直接依赖项，这些依赖将被所有子模块共享 -->
    <dependencies>
        <!-- Lombok 提供代码简化功能 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- MapStruct 用于对象映射 -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>
        <!-- Hutool 工具库提供常用工具类 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
        </dependency>
    </dependencies>

    <!-- 依赖管理部分，集中定义依赖的版本号，供子模块导入使用 -->
    <dependencyManagement>
        <dependencies>
            <!-- 导入 Athena BOM，统一管理内部依赖版本 -->
            <dependency>
                <groupId>io.github.gls-athena</groupId>
                <artifactId>athena-bom</artifactId>
                <version>${revision}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Cloud 依赖管理 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Azure Spring Cloud 依赖管理 -->
            <dependency>
                <groupId>com.azure.spring</groupId>
                <artifactId>spring-cloud-azure-dependencies</artifactId>
                <version>${spring-cloud-azure.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Google Cloud Platform 依赖管理 -->
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>spring-cloud-gcp-dependencies</artifactId>
                <version>${spring-cloud-gcp.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Boot Admin 依赖管理 -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Netflix DGS GraphQL 平台依赖管理 -->
            <dependency>
                <groupId>com.netflix.graphql.dgs</groupId>
                <artifactId>graphql-dgs-platform-dependencies</artifactId>
                <version>${netflix-dgs.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Pivotal Spring Cloud Services 依赖管理 -->
            <dependency>
                <groupId>io.pivotal.spring.cloud</groupId>
                <artifactId>spring-cloud-services-dependencies</artifactId>
                <version>${spring-cloud-services.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Sentry 日志追踪平台依赖管理 -->
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-bom</artifactId>
                <version>${sentry.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring AI 依赖管理 -->
            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bom</artifactId>
                <version>${spring-ai.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Shell 依赖管理 -->
            <dependency>
                <groupId>org.springframework.shell</groupId>
                <artifactId>spring-shell-dependencies</artifactId>
                <version>${spring-shell.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Timefold Solver 依赖管理 -->
            <dependency>
                <groupId>ai.timefold.solver</groupId>
                <artifactId>timefold-solver-bom</artifactId>
                <version>${timefold-solver.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Vaadin UI 框架依赖管理 -->
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring gRPC 依赖管理 -->
            <dependency>
                <groupId>org.springframework.grpc</groupId>
                <artifactId>spring-grpc-dependencies</artifactId>
                <version>${spring-grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 各种第三方库的具体版本声明 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations-jakarta</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.idev.excel</groupId>
                <artifactId>fastexcel</artifactId>
                <version>${fastexcel.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.idev.excel</groupId>
                <artifactId>fastexcel-core</artifactId>
                <version>${fastexcel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.librepdf</groupId>
                <artifactId>openpdf</artifactId>
                <version>${openpdf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.librepdf</groupId>
                <artifactId>openpdf-html</artifactId>
                <version>${openpdf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.librepdf</groupId>
                <artifactId>openpdf-renderer</artifactId>
                <version>${openpdf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.librepdf</groupId>
                <artifactId>openpdf-fonts-extra</artifactId>
                <version>${openpdf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.docx4j</groupId>
                <artifactId>docx4j-JAXB-ReferenceImpl</artifactId>
                <version>${docx4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.docx4j</groupId>
                <artifactId>docx4j-JAXB-MOXy</artifactId>
                <version>${docx4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.docx4j</groupId>
                <artifactId>docx4j-ImportXHTML-core</artifactId>
                <version>${docx4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${aliyun-java-sdk-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-dysmsapi</artifactId>
                <version>${aliyun-java-sdk-dysmsapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot3-starter</artifactId>
                <version>${dynamic-datasource.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-bom</artifactId>
                <version>${mybatis-plus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-bom</artifactId>
                <version>${springdoc-openapi.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud.ai</groupId>
                <artifactId>spring-ai-alibaba-bom</artifactId>
                <version>${spring-ai-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 构建配置部分，定义插件及其默认设置 -->
    <build>
        <!-- 插件管理，用于统一插件版本和配置 -->
        <pluginManagement>
            <plugins>
                <!-- Spring Boot Maven 插件，用于打包可执行 JAR -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- Maven 编译插件，配置 Java 版本和注解处理器 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
